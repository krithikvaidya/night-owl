# Generated by Django 3.0.7 on 2020-06-11 16:19

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='NC1Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.IntegerField()),
                ('veg', models.BooleanField(default=True)),
                ('currently_present', models.BooleanField()),
                ('filter', models.IntegerField(choices=[(1, 'Hot and Cold Beverages'), (2, 'Dosa Items'), (3, 'Sandwiches Bar')])),
            ],
            options={
                'verbose_name_plural': 'Menu items of Block 3 Night Canteen',
            },
        ),
        migrations.CreateModel(
            name='NC2Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.IntegerField()),
                ('veg', models.BooleanField(default=True)),
                ('currently_present', models.BooleanField()),
                ('filter', models.IntegerField(choices=[(1, 'Hot and Cold Beverages'), (2, 'Dosa Items'), (3, 'Sandwiches Bar')])),
            ],
            options={
                'verbose_name_plural': 'Menu items of Block 7 Night Canteen',
            },
        ),
        migrations.CreateModel(
            name='NC3Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.IntegerField()),
                ('veg', models.BooleanField(default=True)),
                ('currently_present', models.BooleanField()),
                ('filter', models.IntegerField(choices=[(1, 'Noodle Items'), (2, 'Rice Items')])),
            ],
            options={
                'verbose_name_plural': "Menu items of Girl's Block Night Canteen",
            },
        ),
        migrations.CreateModel(
            name='PaidOrdersNC1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ph_no', models.BigIntegerField()),
                ('gpay_ph_no', models.BigIntegerField()),
                ('block', models.CharField(max_length=15)),
                ('order_comments', models.TextField(blank=True, null=True)),
                ('item_name', models.TextField()),
                ('price', models.TextField()),
                ('quantity', models.TextField()),
                ('filters', models.CharField(choices=[('a', 'Pending'), ('b', 'Delivered'), ('c', 'Rejected')], default='a', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'List of orders created - Block 3 Night Canteen',
            },
        ),
        migrations.CreateModel(
            name='PaidOrdersNC2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ph_no', models.BigIntegerField()),
                ('gpay_ph_no', models.BigIntegerField()),
                ('block', models.CharField(max_length=15)),
                ('order_comments', models.TextField(blank=True, null=True)),
                ('item_name', models.TextField()),
                ('price', models.TextField()),
                ('quantity', models.TextField()),
                ('filters', models.CharField(choices=[('a', 'Pending'), ('b', 'Delivered'), ('c', 'Rejected')], default='a', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'List of orders created - Block 7 Night Canteen',
            },
        ),
        migrations.CreateModel(
            name='PaidOrdersNC3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ph_no', models.BigIntegerField()),
                ('gpay_ph_no', models.BigIntegerField()),
                ('block', models.CharField(max_length=15)),
                ('order_comments', models.TextField(blank=True, null=True)),
                ('item_name', models.TextField()),
                ('price', models.TextField()),
                ('quantity', models.TextField()),
                ('filters', models.CharField(choices=[('a', 'Pending'), ('b', 'Delivered'), ('c', 'Rejected')], default='a', max_length=10)),
            ],
            options={
                'verbose_name_plural': "List of orders created - Girl's Block Night Canteen",
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('ph_no', models.BigIntegerField()),
                ('gpay_ph_no', models.BigIntegerField()),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
